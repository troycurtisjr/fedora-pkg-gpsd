diff -up gpsd-3.1/SConstruct.scons gpsd-3.1/SConstruct
--- gpsd-3.1/SConstruct.scons	2011-08-28 13:14:24.000000000 +0200
+++ gpsd-3.1/SConstruct	2011-08-29 16:18:11.701614604 +0200
@@ -208,14 +208,12 @@ def installdir(dir):
 
 # Honor the specified installation prefix in link paths.
 env.Prepend(LIBPATH=[os.path.join(env['prefix'], installdir('libdir'))])
-env.Prepend(RPATH=[os.path.join(env['prefix'], installdir('libdir'))])
 
 # Tell generated binaries to look in the current directory for
 # shared libraries. Should be handled sanely by scons on all systems.
 # Not good to use '.' or a relative path here; it's a security risk.
 # At install time we should use chrpath to edit this out of RPATH.
 env.Prepend(LIBPATH=[os.path.realpath(os.curdir)])
-env.Prepend(RPATH=[os.path.realpath(os.curdir)])
 
 # Give deheader a way to set compiler flags
 if 'MORECFLAGS' in os.environ:
@@ -409,6 +407,7 @@ if config.CheckExecutable('$CHRPATH -v',
     have_chrpath = True
 else:
     have_chrpath = False
+have_chrpath = False
 
 # Map options to libraries required to support them that might be absent.
 optionrequires = {
@@ -686,7 +685,7 @@ compiled_gpslib = Library(env=env,
 compiled_gpsdlib = Library(env=env,
                            target="gpsd",
                            sources=libgpsd_sources,
-                           version=libversion, parse_flags=usblibs + rtlibs + bluezlibs)
+                           version=libversion, parse_flags=usblibs + bluezlibs + [ "-lm", "-lgps"])
 
 libraries = [compiled_gpslib, compiled_gpsdlib]
 
@@ -896,7 +895,7 @@ if st != 0:
     from datetime import datetime
     rev = datetime.now().isoformat()[:-4]
 revision='#define REVISION "%s"\n' %(rev.strip(),)
-env.NoClean(env.Textfile(target="revision.h", source=[revision]))
+#env.NoClean(env.Textfile(target="revision.h", source=[revision]))
 
 generated_sources = ['packet_names.h', 'timebase.h', 'gpsd.h', "ais_json.i",
                      'gps_maskdump.c', 'ais_json.c', 'revision.h']
