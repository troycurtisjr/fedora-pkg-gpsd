diff -up gpsd-3.3/SConstruct.scons gpsd-3.3/SConstruct
--- gpsd-3.3/SConstruct.scons	2011-10-29 13:48:53.000000000 +0200
+++ gpsd-3.3/SConstruct	2011-10-31 15:42:33.616170514 +0100
@@ -255,7 +255,6 @@ def installdir(dir):
 
 # Honor the specified installation prefix in link paths.
 env.Prepend(LIBPATH=[installdir('libdir')])
-env.Prepend(RPATH=[installdir('libdir')])
 
 # Give deheader a way to set compiler flags
 if 'MORECFLAGS' in os.environ:
@@ -380,11 +379,8 @@ if config.CheckExecutable('$CHRPATH -v',
     # handled sanely by scons on all systems.  Not good to use '.' or
     # a relative path here; it's a security risk.  At install time we
     # use chrpath to edit this out of RPATH.
-    env.Prepend(LIBPATH=[os.path.realpath(os.curdir)])
-    env.Prepend(RPATH=[os.path.realpath(os.curdir)])
-else:
-    print "The chrpath utility is required for GPSD to build."
-    quit()
+    pass
+env.Prepend(LIBPATH=[os.path.realpath(os.curdir)])
 
 confdefs = ["/* gpsd_config.h.  Generated by scons, do not hand-hack.  */\n"]
 
@@ -962,7 +958,7 @@ if st != 0:
     from datetime import datetime
     rev = datetime.now().isoformat()[:-4]
 revision='#define REVISION "%s"\n' %(rev.strip(),)
-env.NoClean(env.Textfile(target="revision.h", source=[revision]))
+#env.NoClean(env.Textfile(target="revision.h", source=[revision]))
 
 # generate pps_pin.h
 pps_pin = env['pps_pin']
@@ -1102,8 +1098,6 @@ binaryinstall.append(LibraryInstall(env,
 if qt_env:
     binaryinstall.append(LibraryInstall(qt_env, installdir('libdir'), compiled_qgpsmmlib))
 
-env.AddPostAction(binaryinstall, '$CHRPATH -r "%s" "$TARGET"' % installdir('libdir'))
-
 if not env['debug'] and not env['profiling'] and env['strip']:
     env.AddPostAction(binaryinstall, '$STRIP $TARGET')
 
